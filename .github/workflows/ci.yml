name: CI

on: [push, pull_request]

jobs:
  build_and_lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          # The default version is 14. The ESLint config requires at least Node 16 to work properly.
          # We use 18, which is the official LTS version.
          node-version: "18"
          cache: "yarn"

      - name: Retrieve the cached "node_modules" directory (if present)
        uses: actions/cache@v3
        id: node-cache
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: Install dependencies (if the cached directory was not found)
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Test to see if the project compiles
        run: bash build.sh

      - name: Perform automated checks
        run: bash lint.sh

  publish_to_steam_workshop:
    needs: [build_and_lint]
    if: "contains(github.event.head_commit.message, 'chore: release') && github.event_name != 'pull_request'"
    runs-on: ubuntu-latest
    steps:
      - name: Print mod files
        run: |
          ls -la $content_dir/
        env:
          content_dir: ${{ github.workspace }}

      - name: Setup steamcmd
        uses: CyberAndrii/setup-steamcmd@v1

      - name: Create config file
        run: |
          echo $content >> $config_file
          cat $config_file
        env:
          config_file: ${{ github.workspace }}/workshop_build.vdf
          content: >
            "workshopitem"
            {
            "appid"  "250900"
            "publishedfileid"  "2926446220"
            "contentfolder"  "${{ github.workspace }}/mod/"
            "changenote"  "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }

      - name: Setup upterm session
        uses: lhotari/action-upterm@v1

      - name: Upload to workshop
        run: >-
          steamcmd
          +login "${{ secrets.STEAM_USERNAME }}" "${{ secrets.STEAM_PASSWORD }}" "${{ secrets.STEAM_OTP }}"
          +workshop_build_item "${{ github.workspace }}/workshop_build.vdf"
          +quit

  #discord:
  #  name: Discord Failure Notification
  #  needs: [build_and_lint]
  #  if: always() # This is needed to always run this job, even if the other jobs fail.
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: technote-space/workflow-conclusion-action@v3
  #    - if: env.WORKFLOW_CONCLUSION != 'success' && env.WORKFLOW_CONCLUSION != 'cancelled'
  #      uses: sarisia/actions-status-discord@v1
  #      with:
  #        webhook: ${{ secrets.DISCORD_WEBHOOK }}
  #        status: ${{ env.WORKFLOW_CONCLUSION }}
  #        title: ""
